var search_data = {"index":{"searchIndex":["forwardable","extended","def_delegator()","def_delegators()","def_hash_delegator()","def_ivar_delegator()","def_modern_delegator()","delegate_debug()","extended()","prepare_delegate()","rb_delegate()"],"longSearchIndex":["forwardable","forwardable::extended","forwardable::extended#def_delegator()","forwardable::extended#def_delegators()","forwardable::extended#def_hash_delegator()","forwardable::extended#def_ivar_delegator()","forwardable::extended#def_modern_delegator()","forwardable::extended#delegate_debug()","forwardable::extended::extended()","forwardable::extended#prepare_delegate()","forwardable::extended#rb_delegate()"],"info":[["Forwardable","","Forwardable.html","","<p>Frozen-string-literal: true Copyright: 2015-2016 Jordon Bedwell - MIT\nLicense Encoding: utf-8\n"],["Forwardable::Extended","","Forwardable/Extended.html","",""],["def_delegator","Forwardable::Extended","Forwardable/Extended.html#method-i-def_delegator","(accessor, method, alias_ = method, **kwd)","<p>Wraps around traditional delegation and modern delegation.\n"],["def_delegators","Forwardable::Extended","Forwardable/Extended.html#method-i-def_delegators","(accessor, *methods)","<p>Create multiple delegates at once.\n"],["def_hash_delegator","Forwardable::Extended","Forwardable/Extended.html#method-i-def_hash_delegator","(hash, method, key: method, **kwd)","<p>Delegate a method to a hash and key.\n"],["def_ivar_delegator","Forwardable::Extended","Forwardable/Extended.html#method-i-def_ivar_delegator","(ivar, alias_ = ivar, **kwd)","<p>Delegate a method to an instance variable.\n"],["def_modern_delegator","Forwardable::Extended","Forwardable/Extended.html#method-i-def_modern_delegator","(accessor, method, alias_ = method, args: \\ { :before => [], :after => [] }, **kwd)","<p>Like def_delegator but allows you to send args and do other stuff.\n"],["delegate_debug","Forwardable::Extended","Forwardable/Extended.html#method-i-delegate_debug","(str)",""],["extended","Forwardable::Extended","Forwardable/Extended.html#method-c-extended","(klass)","<p>Make our methods private on the class, there is no reason for public.\n"],["prepare_delegate","Forwardable::Extended","Forwardable/Extended.html#method-i-prepare_delegate","(wrap: nil, bool: false)","<p>Prepares a delegate and it&#39;s few arguments.\n"],["rb_delegate","Forwardable::Extended","Forwardable/Extended.html#method-i-rb_delegate","(method, to: nil, alias_of: method, **kwd)","<p>Delegate using a Rails-like interface.\n"]]}}